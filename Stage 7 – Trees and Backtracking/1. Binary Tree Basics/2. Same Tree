https://leetcode.com/problems/same-tree/description/

//https://www.youtube.com/watch?v=BhuvF_-PWS0

Input : TreeNode root
Keywords : binary trees, comparison
Constraints : The number of nodes in both trees is in the range [0, 100].
              -10^4 <= Node.val <= 10^4


//Recursive - DFS(Pre-order traversal) - Any traversal will be fine, just both tree traversals should be same

//TC = O(n)
//SC = O(n) - Recursion stack space

class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        // Base case: if both trees are null, they are identical
        if(p == null && q == null)
            return true;      
        // If only one tree is null or the values are different, they are not identical
        if(p == null || q == null || p.val != q.val){
            return false;
        }
        // Recursively check if the left and right subtrees are identical
        boolean isLeftSame = isSameTree(p.left, q.left)
        boolean isRightSame = isSameTree(p.right, q.right);  

        return isLeftSame && isRightSame;
    }
}
